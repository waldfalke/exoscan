/**
 * –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–º–µ—Ä—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ
 * –î–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ Puppeteer-–ø–æ–¥–æ–±–Ω–æ–º—É —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É
 */

const { exec } = require('child_process');
const fs = require('fs');
const path = require('path');

class BrowserCameraAutomation {
    constructor() {
        this.testResults = [];
        this.logFile = path.join(__dirname, 'camera-test-results.json');
    }

    log(message, type = 'INFO') {
        const timestamp = new Date().toISOString();
        const logEntry = `[${timestamp}] [${type}] ${message}`;
        console.log(logEntry);
        
        this.testResults.push({
            timestamp,
            type,
            message
        });
    }

    async openBrowserTest() {
        return new Promise((resolve) => {
            this.log('–û—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–º–µ—Ä—ã...');
            
            // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞ —Å —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
            const url = 'http://localhost:3000/camera-test-simple.html';
            const command = process.platform === 'win32' 
                ? `start ${url}` 
                : process.platform === 'darwin' 
                ? `open ${url}` 
                : `xdg-open ${url}`;
            
            exec(command, (error) => {
                if (error) {
                    this.log(`–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞: ${error.message}`, 'ERROR');
                } else {
                    this.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è', 'SUCCESS');
                }
                resolve(!error);
            });
        });
    }

    generateTestInstructions() {
        const instructions = `
=== –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –†–£–ß–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ö–ê–ú–ï–†–´ ===

1. –ü–†–û–í–ï–†–ö–ê –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò –ö–ê–ú–ï–†–´:
   - –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–∞–º–µ—Ä—É"
   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø–æ—è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–∏–¥–µ–æ –ø–æ—Ç–æ–∫
   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–µ—Ç –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–µ

2. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ô:
   - –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–¢–µ—Å—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π"
   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –≤—Å–µ—Ö —Ç—Ä–µ—Ö —É—Ä–æ–≤–Ω–µ–π:
     * –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ (1920x1080, 30fps)
     * –ë–∞–∑–æ–≤—ã–µ (1280x720)
     * –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ (—Ç–æ–ª—å–∫–æ facingMode)

3. –ü–†–û–í–ï–†–ö–ê –£–°–¢–†–û–ô–°–¢–í:
   - –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–°–ø–∏—Å–æ–∫ –∫–∞–º–µ—Ä"
   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞–º–µ—Ä—ã

4. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–Ø:
   - –ü—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ–π –∫–∞–º–µ—Ä–µ –ø–æ–¥–Ω–µ—Å–∏—Ç–µ QR-–∫–æ–¥ –∏–ª–∏ —à—Ç—Ä–∏—Ö-–∫–æ–¥
   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –∞–≤—Ç–æ—Ñ–æ–∫—É—Å
   - –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

5. –ü–†–û–í–ï–†–ö–ê –°–¢–ê–ë–ò–õ–¨–ù–û–°–¢–ò:
   - –û—Å—Ç–∞–≤—å—Ç–µ –∫–∞–º–µ—Ä—É —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ 30 —Å–µ–∫—É–Ω–¥
   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∑–∞–≤–∏—Å–∞–Ω–∏–π
   - –ù–∞–∂–º–∏—Ç–µ "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–º–µ—Ä—É"

–û–ñ–ò–î–ê–ï–ú–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:
‚úÖ –ö–∞–º–µ—Ä–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫
‚úÖ –í–∏–¥–µ–æ –ø–æ—Ç–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
‚úÖ –í—Å–µ —É—Ä–æ–≤–Ω–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞—é—Ç
‚úÖ –°–ø–∏—Å–æ–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –Ω–µ –ø—É—Å—Ç–æ–π
‚úÖ –ù–µ—Ç –æ—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
‚úÖ –ö–∞–º–µ—Ä–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç

–í–û–ó–ú–û–ñ–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:
‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–º–µ—Ä–µ (—Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è)
‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å HTTPS/–±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
‚ùå –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Å –¥—Ä—É–≥–∏–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏
`;

        this.log('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã');
        return instructions;
    }

    async generateAutomationScript() {
        const script = `
// –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
// –í—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (F12)

(async function automateCameraTest() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–º–µ—Ä—ã...');
    
    const results = {
        timestamp: new Date().toISOString(),
        tests: []
    };
    
    function addResult(test, status, message, data = null) {
        const result = { test, status, message, data, timestamp: new Date().toISOString() };
        results.tests.push(result);
        console.log(\`[\${status}] \${test}: \${message}\`);
        return result;
    }
    
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ MediaDevices
    try {
        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
            addResult('MediaDevices Support', '‚úÖ', 'getUserMedia –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
        } else {
            addResult('MediaDevices Support', '‚ùå', 'getUserMedia –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
            return results;
        }
    } catch (error) {
        addResult('MediaDevices Support', '‚ùå', \`–û—à–∏–±–∫–∞: \${error.message}\`);
        return results;
    }
    
    // –¢–µ—Å—Ç 2: –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    try {
        const devices = await navigator.mediaDevices.enumerateDevices();
        const videoDevices = devices.filter(d => d.kind === 'videoinput');
        addResult('Device Enumeration', '‚úÖ', \`–ù–∞–π–¥–µ–Ω–æ \${videoDevices.length} –≤–∏–¥–µ–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤\`, videoDevices);
    } catch (error) {
        addResult('Device Enumeration', '‚ùå', \`–û—à–∏–±–∫–∞: \${error.message}\`);
    }
    
    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
    try {
        const permissionStatus = await navigator.permissions.query({name: 'camera'});
        addResult('Camera Permissions', '‚úÖ', \`–°—Ç–∞—Ç—É—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: \${permissionStatus.state}\`, {state: permissionStatus.state});
    } catch (error) {
        addResult('Camera Permissions', '‚ö†Ô∏è', \`–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: \${error.message}\`);
    }
    
    // –¢–µ—Å—Ç 4: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
    const constraintTests = [
        {
            name: '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ',
            constraints: { video: { facingMode: { ideal: "environment" } } }
        },
        {
            name: '–ë–∞–∑–æ–≤—ã–µ',
            constraints: { video: { facingMode: { ideal: "environment" }, width: { ideal: 1280 }, height: { ideal: 720 } } }
        },
        {
            name: '–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ',
            constraints: { video: { facingMode: { ideal: "environment" }, width: { ideal: 1920 }, height: { ideal: 1080 }, frameRate: { ideal: 30 } } }
        }
    ];
    
    for (const test of constraintTests) {
        try {
            const stream = await navigator.mediaDevices.getUserMedia(test.constraints);
            const track = stream.getVideoTracks()[0];
            const settings = track.getSettings();
            
            addResult(\`Constraints: \${test.name}\`, '‚úÖ', \`–£—Å–ø–µ—à–Ω–æ: \${settings.width}x\${settings.height}\`, settings);
            
            // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ—Ç–æ–∫–∞
            stream.getTracks().forEach(track => track.stop());
        } catch (error) {
            addResult(\`Constraints: \${test.name}\`, '‚ùå', \`–û—à–∏–±–∫–∞: \${error.message}\`);
        }
    }
    
    // –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    addResult('Secure Context', window.isSecureContext ? '‚úÖ' : '‚ùå', \`–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: \${window.isSecureContext}\`);
    
    // –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTPS
    addResult('HTTPS', location.protocol === 'https:' ? '‚úÖ' : '‚ö†Ô∏è', \`–ü—Ä–æ—Ç–æ–∫–æ–ª: \${location.protocol}\`);
    
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', results);
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ localStorage
    localStorage.setItem('cameraTestResults', JSON.stringify(results));
    console.log('üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ localStorage');
    
    return results;
})();
`;

        const scriptPath = path.join(__dirname, 'browser-automation-script.js');
        fs.writeFileSync(scriptPath, script);
        
        this.log(`–°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${scriptPath}`);
        return script;
    }

    async saveResults() {
        const finalResults = {
            timestamp: new Date().toISOString(),
            testType: 'Browser Camera Automation',
            logs: this.testResults,
            instructions: this.generateTestInstructions(),
            automationScript: await this.generateAutomationScript()
        };
        
        fs.writeFileSync(this.logFile, JSON.stringify(finalResults, null, 2));
        this.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: ${this.logFile}`, 'SUCCESS');
        
        return finalResults;
    }

    async run() {
        this.log('–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–º–µ—Ä—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ...');
        
        try {
            // –û—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
            await this.openBrowserTest();
            
            // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
            const instructions = this.generateTestInstructions();
            console.log(instructions);
            
            // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
            await this.generateAutomationScript();
            
            // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            const results = await this.saveResults();
            
            this.log('‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ', 'SUCCESS');
            
            console.log('\\n' + '='.repeat(80));
            console.log('–°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
            console.log('1. –ë—Ä–∞—É–∑–µ—Ä –¥–æ–ª–∂–µ–Ω –æ—Ç–∫—Ä—ã—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
            console.log('2. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤—ã—à–µ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
            console.log('3. –ò–ª–∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)');
            console.log('4. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
            console.log('='.repeat(80));
            
            return results;
            
        } catch (error) {
            this.log(`‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏: ${error.message}`, 'ERROR');
            throw error;
        }
    }
}

// –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
if (require.main === module) {
    const automation = new BrowserCameraAutomation();
    automation.run()
        .then(() => {
            console.log('\\n‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
            process.exit(0);
        })
        .catch(error => {
            console.error('\\n‚ùå –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å:', error.message);
            process.exit(1);
        });
}

module.exports = BrowserCameraAutomation;