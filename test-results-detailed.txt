
> exoscan-web@0.1.0 test
> jest

 тЪа Warning: Next.js inferred your workspace root, but it may not be correct.
 We detected multiple lockfiles and selected the directory of D:\Dev\ExoScan\package-lock.json as the root directory.
 To silence this warning, set `outputFileTracingRoot` in your Next.js config, or consider removing one of the lockfiles if it's not needed.
   See https://nextjs.org/docs/app/api-reference/config/next-config-js/output#caveats for more information.
 Detected additional lockfiles: 
   * D:\Dev\ExoScan\exoscan-web\package-lock.json

PASS src/lib/__tests__/google-sheets.test.ts
  тЧП Console

    console.error
      Error getting rows from Google Sheets: Error: API Error
          at Object.<anonymous> (D:\Dev\ExoScan\exoscan-web\src\lib\__tests__\google-sheets.test.ts:104:60)
          at Promise.finally.completed (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:1557:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:1497:10)
          at _callCircusTest (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:1007:40)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at _runTest (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:947:3)
          at D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:849:7
          at _runTestsForDescribeBlock (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:862:11)
          at _runTestsForDescribeBlock (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
          at _runTestsForDescribeBlock (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
          at run (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:761:3)
          at runAndTransformResultsToJestFormat (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:1918:21)
          at jestAdapter (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\runner.js:101:19)
          at runTestInternal (D:\Dev\ExoScan\exoscan-web\node_modules\jest-runner\build\testWorker.js:275:16)
          at runTest (D:\Dev\ExoScan\exoscan-web\node_modules\jest-runner\build\testWorker.js:343:7)
          at Object.worker (D:\Dev\ExoScan\exoscan-web\node_modules\jest-runner\build\testWorker.js:497:12)

      121 |       }));
      122 |     } catch (error) {
    > 123 |       console.error('Error getting rows from Google Sheets:', error);
          |               ^
      124 |       throw new Error('Failed to fetch data from Google Sheets');
      125 |     }
      126 |   }

      at GoogleSheetsAdapter.error [as getRows] (src/lib/google-sheets.ts:123:15)
      at Object.<anonymous> (src/lib/__tests__/google-sheets.test.ts:106:7)

    console.error
      Error adding row to Google Sheets: Error: API Error
          at Object.<anonymous> (D:\Dev\ExoScan\exoscan-web\src\lib\__tests__\google-sheets.test.ts:157:63)
          at Promise.finally.completed (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:1557:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:1497:10)
          at _callCircusTest (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:1007:40)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at _runTest (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:947:3)
          at D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:849:7
          at _runTestsForDescribeBlock (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:862:11)
          at _runTestsForDescribeBlock (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
          at _runTestsForDescribeBlock (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
          at run (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:761:3)
          at runAndTransformResultsToJestFormat (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:1918:21)
          at jestAdapter (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\runner.js:101:19)
          at runTestInternal (D:\Dev\ExoScan\exoscan-web\node_modules\jest-runner\build\testWorker.js:275:16)
          at runTest (D:\Dev\ExoScan\exoscan-web\node_modules\jest-runner\build\testWorker.js:343:7)
          at Object.worker (D:\Dev\ExoScan\exoscan-web\node_modules\jest-runner\build\testWorker.js:497:12)

      161 |       return newItem;
      162 |     } catch (error) {
    > 163 |       console.error('Error adding row to Google Sheets:', error);
          |               ^
      164 |       throw new Error('Failed to add item to Google Sheets');
      165 |     }
      166 |   }

      at GoogleSheetsAdapter.error [as addRow] (src/lib/google-sheets.ts:163:15)
      at Object.<anonymous> (src/lib/__tests__/google-sheets.test.ts:167:7)

    console.error
      Error creating headers in Google Sheets: Error: API Error
          at Object.<anonymous> (D:\Dev\ExoScan\exoscan-web\src\lib\__tests__\google-sheets.test.ts:321:63)
          at Promise.finally.completed (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:1557:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:1497:10)
          at _callCircusTest (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:1007:40)
          at processTicksAndRejections (node:internal/process/task_queues:105:5)
          at _runTest (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:947:3)
          at D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:849:7
          at _runTestsForDescribeBlock (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:862:11)
          at _runTestsForDescribeBlock (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
          at _runTestsForDescribeBlock (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:857:11)
          at run (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:761:3)
          at runAndTransformResultsToJestFormat (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\jestAdapterInit.js:1918:21)
          at jestAdapter (D:\Dev\ExoScan\exoscan-web\node_modules\jest-circus\build\runner.js:101:19)
          at runTestInternal (D:\Dev\ExoScan\exoscan-web\node_modules\jest-runner\build\testWorker.js:275:16)
          at runTest (D:\Dev\ExoScan\exoscan-web\node_modules\jest-runner\build\testWorker.js:343:7)
          at Object.worker (D:\Dev\ExoScan\exoscan-web\node_modules\jest-runner\build\testWorker.js:497:12)

      300 |       });
      301 |     } catch (error) {
    > 302 |       console.error('Error creating headers in Google Sheets:', error);
          |               ^
      303 |       throw new Error('Failed to create headers in Google Sheets');
      304 |     }
      305 |   }

      at GoogleSheetsAdapter.error [as createHeaders] (src/lib/google-sheets.ts:302:15)
      at Object.<anonymous> (src/lib/__tests__/google-sheets.test.ts:323:7)

PASS src/app/api/items/barcode/[barcode]/__tests__/route.test.ts
PASS src/app/api/items/__tests__/route.test.ts
PASS src/app/api/items/[id]/__tests__/route.test.ts
FAIL src/constants/__tests__/barcodeFormats.test.ts
  тЧП Barcode Formats Configuration тА║ PRODUCT_BARCODE_FORMATS тА║ should be readonly array

    expect(received).toThrow()

    Received function did not throw

      35 |         // @ts-expect-error - testing readonly behavior
      36 |         PRODUCT_BARCODE_FORMATS.push('invalid')
    > 37 |       }).toThrow()
         |          ^
      38 |     })
      39 |   })
      40 |

      at Object.toThrow (src/constants/__tests__/barcodeFormats.test.ts:37:10)

  тЧП Barcode Formats Configuration тА║ Format Consistency тА║ should have same number of formats across all constants

    expect(received).toBe(expected) // Object.is equality

    Expected: 4
    Received: 5

      121 |   describe('Format Consistency', () => {
      122 |     it('should have same number of formats across all constants', () => {
    > 123 |       expect(PRODUCT_BARCODE_FORMATS.length).toBe(BARCODE_DETECTOR_FORMATS.length)
          |                                              ^
      124 |       expect(BARCODE_DETECTOR_FORMATS.length).toBe(ZXING_FORMATS.length)
      125 |       expect(ZXING_FORMATS.length).toBe(4)
      126 |     })

      at Object.toBe (src/constants/__tests__/barcodeFormats.test.ts:123:46)

  тЧП Barcode Formats Configuration тА║ Format Consistency тА║ should have complete mapping coverage

    expect(received).toHaveLength(expected)

    Expected length: 5
    Received length: 4
    Received array:  ["EAN-13", "EAN-8", "UPC-A", "Code-128"]

      133 |       
      134 |       // ╨Я╤А╨╛╨▓╨╡╤А╤П╨╡╨╝, ╤З╤В╨╛ ╨▓╤Б╨╡ ╨╝╨░╨┐╨┐╨╕╨╜╨│╨╕ ╨╕╨╝╨╡╤О╤В ╨╛╨┤╨╕╨╜╨░╨║╨╛╨▓╨╛╨╡ ╨║╨╛╨╗╨╕╤З╨╡╤Б╤В╨▓╨╛ ╤Н╨╗╨╡╨╝╨╡╨╜╤В╨╛╨▓
    > 135 |       expect(Object.keys(PRODUCT_TO_DETECTOR_FORMAT_MAP)).toHaveLength(PRODUCT_BARCODE_FORMATS.length)
          |                                                           ^
      136 |       expect(Object.keys(PRODUCT_TO_ZXING_FORMAT_MAP)).toHaveLength(PRODUCT_BARCODE_FORMATS.length)
      137 |       expect(Object.keys(ZXING_TO_PRODUCT_FORMAT_MAP)).toHaveLength(ZXING_FORMATS.length)
      138 |       expect(Object.keys(DETECTOR_TO_PRODUCT_FORMAT_MAP)).toHaveLength(BARCODE_DETECTOR_FORMATS.length)

      at Object.toHaveLength (src/constants/__tests__/barcodeFormats.test.ts:135:59)

  тЧП Barcode Formats Configuration тА║ BarcodeFormatUtils тА║ isProductBarcodeFormat тА║ should return false for invalid or QR formats

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      188 |         expect(BarcodeFormatUtils.isProductBarcodeFormat('QR')).toBe(false)
      189 |         expect(BarcodeFormatUtils.isProductBarcodeFormat('QR_CODE')).toBe(false)
    > 190 |         expect(BarcodeFormatUtils.isProductBarcodeFormat('invalid')).toBe(false)
          |                                                                      ^
      191 |         expect(BarcodeFormatUtils.isProductBarcodeFormat('')).toBe(false)
      192 |       })
      193 |     })

      at Object.toBe (src/constants/__tests__/barcodeFormats.test.ts:190:70)

PASS src/lib/__tests__/barcode-validator.test.ts
FAIL src/components/__tests__/Scanner.strict-mode.test.tsx (7.542 s)
  тЧП Console

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

       97 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨▓╨╛╨╖╨╝╨╛╨╢╨╜╨╛╤Б╤В╨╕
       98 |       const caps = await scanner.getCapabilities()
    >  99 |       setCapabilities(caps)
          |       ^
      100 |
      101 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨┤╨╛╤Б╤В╤Г╨┐╨╜╤Л╨╡ ╨║╨░╨╝╨╡╤А╤Л
      102 |       const cameras = await scanner.getAvailableCameras()

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCapabilities (src/hooks/useScanner.ts:99:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

       97 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨▓╨╛╨╖╨╝╨╛╨╢╨╜╨╛╤Б╤В╨╕
       98 |       const caps = await scanner.getCapabilities()
    >  99 |       setCapabilities(caps)
          |       ^
      100 |
      101 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨┤╨╛╤Б╤В╤Г╨┐╨╜╤Л╨╡ ╨║╨░╨╝╨╡╤А╤Л
      102 |       const cameras = await scanner.getAvailableCameras()

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCapabilities (src/hooks/useScanner.ts:99:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      101 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨┤╨╛╤Б╤В╤Г╨┐╨╜╤Л╨╡ ╨║╨░╨╝╨╡╤А╤Л
      102 |       const cameras = await scanner.getAvailableCameras()
    > 103 |       setAvailableCameras(cameras)
          |       ^
      104 |
      105 |       // ╨Я╤А╨╛╨▓╨╡╤А╤П╨╡╨╝ ╤А╨░╨╖╤А╨╡╤И╨╡╨╜╨╕╤П
      106 |       const permission = await scanner.getCameraPermissionStatus()

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAvailableCameras (src/hooks/useScanner.ts:103:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      101 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨┤╨╛╤Б╤В╤Г╨┐╨╜╤Л╨╡ ╨║╨░╨╝╨╡╤А╤Л
      102 |       const cameras = await scanner.getAvailableCameras()
    > 103 |       setAvailableCameras(cameras)
          |       ^
      104 |
      105 |       // ╨Я╤А╨╛╨▓╨╡╤А╤П╨╡╨╝ ╤А╨░╨╖╤А╨╡╤И╨╡╨╜╨╕╤П
      106 |       const permission = await scanner.getCameraPermissionStatus()

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAvailableCameras (src/hooks/useScanner.ts:103:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      105 |       // ╨Я╤А╨╛╨▓╨╡╤А╤П╨╡╨╝ ╤А╨░╨╖╤А╨╡╤И╨╡╨╜╨╕╤П
      106 |       const permission = await scanner.getCameraPermissionStatus()
    > 107 |       setPermissionStatus(permission)
          |       ^
      108 |
      109 |       setIsInitialized(true)
      110 |       console.log('тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜', { caps, cameras, permission })

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setPermissionStatus (src/hooks/useScanner.ts:107:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      107 |       setPermissionStatus(permission)
      108 |
    > 109 |       setIsInitialized(true)
          |       ^
      110 |       console.log('тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜', { caps, cameras, permission })
      111 |
      112 |       // ╨Р╨▓╤В╨╛╨╖╨░╨┐╤Г╤Б╨║ ╨╡╤Б╨╗╨╕ ╨▓╨║╨╗╤О╤З╨╡╨╜

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setIsInitialized (src/hooks/useScanner.ts:109:7)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      105 |       // ╨Я╤А╨╛╨▓╨╡╤А╤П╨╡╨╝ ╤А╨░╨╖╤А╨╡╤И╨╡╨╜╨╕╤П
      106 |       const permission = await scanner.getCameraPermissionStatus()
    > 107 |       setPermissionStatus(permission)
          |       ^
      108 |
      109 |       setIsInitialized(true)
      110 |       console.log('тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜', { caps, cameras, permission })

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setPermissionStatus (src/hooks/useScanner.ts:107:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      107 |       setPermissionStatus(permission)
      108 |
    > 109 |       setIsInitialized(true)
          |       ^
      110 |       console.log('тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜', { caps, cameras, permission })
      111 |
      112 |       // ╨Р╨▓╤В╨╛╨╖╨░╨┐╤Г╤Б╨║ ╨╡╤Б╨╗╨╕ ╨▓╨║╨╗╤О╤З╨╡╨╜

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setIsInitialized (src/hooks/useScanner.ts:109:7)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

       97 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨▓╨╛╨╖╨╝╨╛╨╢╨╜╨╛╤Б╤В╨╕
       98 |       const caps = await scanner.getCapabilities()
    >  99 |       setCapabilities(caps)
          |       ^
      100 |
      101 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨┤╨╛╤Б╤В╤Г╨┐╨╜╤Л╨╡ ╨║╨░╨╝╨╡╤А╤Л
      102 |       const cameras = await scanner.getAvailableCameras()

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCapabilities (src/hooks/useScanner.ts:99:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

       97 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨▓╨╛╨╖╨╝╨╛╨╢╨╜╨╛╤Б╤В╨╕
       98 |       const caps = await scanner.getCapabilities()
    >  99 |       setCapabilities(caps)
          |       ^
      100 |
      101 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨┤╨╛╤Б╤В╤Г╨┐╨╜╤Л╨╡ ╨║╨░╨╝╨╡╤А╤Л
      102 |       const cameras = await scanner.getAvailableCameras()

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCapabilities (src/hooks/useScanner.ts:99:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      101 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨┤╨╛╤Б╤В╤Г╨┐╨╜╤Л╨╡ ╨║╨░╨╝╨╡╤А╤Л
      102 |       const cameras = await scanner.getAvailableCameras()
    > 103 |       setAvailableCameras(cameras)
          |       ^
      104 |
      105 |       // ╨Я╤А╨╛╨▓╨╡╤А╤П╨╡╨╝ ╤А╨░╨╖╤А╨╡╤И╨╡╨╜╨╕╤П
      106 |       const permission = await scanner.getCameraPermissionStatus()

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAvailableCameras (src/hooks/useScanner.ts:103:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      101 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨┤╨╛╤Б╤В╤Г╨┐╨╜╤Л╨╡ ╨║╨░╨╝╨╡╤А╤Л
      102 |       const cameras = await scanner.getAvailableCameras()
    > 103 |       setAvailableCameras(cameras)
          |       ^
      104 |
      105 |       // ╨Я╤А╨╛╨▓╨╡╤А╤П╨╡╨╝ ╤А╨░╨╖╤А╨╡╤И╨╡╨╜╨╕╤П
      106 |       const permission = await scanner.getCameraPermissionStatus()

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAvailableCameras (src/hooks/useScanner.ts:103:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      105 |       // ╨Я╤А╨╛╨▓╨╡╤А╤П╨╡╨╝ ╤А╨░╨╖╤А╨╡╤И╨╡╨╜╨╕╤П
      106 |       const permission = await scanner.getCameraPermissionStatus()
    > 107 |       setPermissionStatus(permission)
          |       ^
      108 |
      109 |       setIsInitialized(true)
      110 |       console.log('тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜', { caps, cameras, permission })

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setPermissionStatus (src/hooks/useScanner.ts:107:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      107 |       setPermissionStatus(permission)
      108 |
    > 109 |       setIsInitialized(true)
          |       ^
      110 |       console.log('тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜', { caps, cameras, permission })
      111 |
      112 |       // ╨Р╨▓╤В╨╛╨╖╨░╨┐╤Г╤Б╨║ ╨╡╤Б╨╗╨╕ ╨▓╨║╨╗╤О╤З╨╡╨╜

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setIsInitialized (src/hooks/useScanner.ts:109:7)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      105 |       // ╨Я╤А╨╛╨▓╨╡╤А╤П╨╡╨╝ ╤А╨░╨╖╤А╨╡╤И╨╡╨╜╨╕╤П
      106 |       const permission = await scanner.getCameraPermissionStatus()
    > 107 |       setPermissionStatus(permission)
          |       ^
      108 |
      109 |       setIsInitialized(true)
      110 |       console.log('тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜', { caps, cameras, permission })

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setPermissionStatus (src/hooks/useScanner.ts:107:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      107 |       setPermissionStatus(permission)
      108 |
    > 109 |       setIsInitialized(true)
          |       ^
      110 |       console.log('тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜', { caps, cameras, permission })
      111 |
      112 |       // ╨Р╨▓╤В╨╛╨╖╨░╨┐╤Г╤Б╨║ ╨╡╤Б╨╗╨╕ ╨▓╨║╨╗╤О╤З╨╡╨╜

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setIsInitialized (src/hooks/useScanner.ts:109:7)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

  тЧП Scanner Component - React Strict Mode Tests тА║ Strict Mode Double Mounting тА║ should handle double mounting without creating duplicate streams

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div>
          <div
            class="relative w-full h-full bg-black"
          >
            <video
              autoplay=""
              class="w-full h-full object-cover"
              playsinline=""
            />
            <div
              class="absolute top-4 right-4 flex flex-col gap-2"
            >
              <button
                class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
                title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
            >
              <div
                class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
              >
                <button
                  class="text-white p-1 disabled:opacity-50"
                  disabled=""
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20 12H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
                <span
                  class="text-white text-sm min-w-[3rem] text-center"
                >
                  1.0
                  x
                </span>
                <button
                  class="text-white p-1 disabled:opacity-50"
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M12 4v16m8-8H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </body>
    </html>

      120 |       
      121 |       await waitFor(() => {
    > 122 |         expect(mockGetUserMedia).toHaveBeenCalledTimes(1);
          |                                  ^
      123 |       });
      124 |       
      125 |       // Verify only one stream was created

      at toHaveBeenCalledTimes (src/components/__tests__/Scanner.strict-mode.test.tsx:122:34)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  тЧП Scanner Component - React Strict Mode Tests тА║ Strict Mode Double Mounting тА║ should prevent race conditions during rapid mount/unmount

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 2
    Received number of calls: 0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div />
        <div>
          <div
            class="relative w-full h-full bg-black"
          >
            <video
              autoplay=""
              class="w-full h-full object-cover"
              playsinline=""
            />
            <div
              class="absolute top-4 right-4 flex flex-col gap-2"
            >
              <button
                class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
                title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
            >
              <div
                class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
              >
                <button
                  class="text-white p-1 disabled:opacity-50"
                  disabled=""
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20 12H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
                <span
                  class="text-white text-sm min-w-[3rem] text-center"
                >
                  1.0
                  x
                </span>
                <button
                  class="text-white p-1 disabled:opacity-50"
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M12 4v16m8-8H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </body>
    </html>

      151 |       await waitFor(() => {
      152 |         // Should have called getUserMedia twice (once per mount)
    > 153 |         expect(mockGetUserMedia).toHaveBeenCalledTimes(2);
          |                                  ^
      154 |       });
      155 |       
      156 |       // But should have properly cleaned up the first stream

      at toHaveBeenCalledTimes (src/components/__tests__/Scanner.strict-mode.test.tsx:153:34)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  тЧП Scanner Component - React Strict Mode Tests тА║ Strict Mode Double Mounting тА║ should handle useEffect cleanup properly in Strict Mode

    TestingLibraryElementError: Unable to find an element with the text: ╨Ч╨░╨┐╤Г╤Б╤В╨╕╤В╤М ╨║╨░╨╝╨╡╤А╤Г. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="relative w-full h-full bg-black"
        >
          <video
            autoplay=""
            class="w-full h-full object-cover"
            playsinline=""
          />
          <div
            class="absolute top-4 right-4 flex flex-col gap-2"
          >
            <button
              class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
              title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
            >
              <svg
                class="w-5 h-5"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                />
              </svg>
            </button>
          </div>
          <div
            class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
          >
            <div
              class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
            >
              <button
                class="text-white p-1 disabled:opacity-50"
                disabled=""
              >
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M20 12H4"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
              <span
                class="text-white text-sm min-w-[3rem] text-center"
              >
                1.0
                x
              </span>
              <button
                class="text-white p-1 disabled:opacity-50"
              >
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M12 4v16m8-8H4"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
          </div>
          <div
            class="absolute inset-0 bg-black/50 flex items-center justify-center"
          >
            <div
              class="text-white text-center"
            >
              <div
                class="animate-spin rounded-full h-8 w-8 border-b-2 border-white mx-auto mb-2"
              />
              <p>
                ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...
              </p>
            </div>
          </div>
        </div>
      </div>
    </body>

      187 |       );
      188 |       
    > 189 |       const startButton = screen.getByText('╨Ч╨░╨┐╤Г╤Б╤В╨╕╤В╤М ╨║╨░╨╝╨╡╤А╤Г');
          |                                  ^
      190 |       await userEvent.click(startButton);
      191 |       
      192 |       await waitFor(() => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (src/components/__tests__/Scanner.strict-mode.test.tsx:189:34)

  тЧП Scanner Component - React Strict Mode Tests тА║ mountedRef Pattern Validation тА║ should respect mounted state during async operations

    TestingLibraryElementError: Unable to find an element with the text: ╨Ч╨░╨┐╤Г╤Б╤В╨╕╤В╤М ╨║╨░╨╝╨╡╤А╤Г. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="relative w-full h-full bg-black"
        >
          <video
            autoplay=""
            class="w-full h-full object-cover"
            playsinline=""
          />
          <div
            class="absolute top-4 right-4 flex flex-col gap-2"
          >
            <button
              class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
              title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
            >
              <svg
                class="w-5 h-5"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                />
              </svg>
            </button>
          </div>
          <div
            class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
          >
            <div
              class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
            >
              <button
                class="text-white p-1 disabled:opacity-50"
                disabled=""
              >
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M20 12H4"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
              <span
                class="text-white text-sm min-w-[3rem] text-center"
              >
                1.0
                x
              </span>
              <button
                class="text-white p-1 disabled:opacity-50"
              >
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M12 4v16m8-8H4"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
          </div>
          <div
            class="absolute inset-0 bg-black/50 flex items-center justify-center"
          >
            <div
              class="text-white text-center"
            >
              <div
                class="animate-spin rounded-full h-8 w-8 border-b-2 border-white mx-auto mb-2"
              />
              <p>
                ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...
              </p>
            </div>
          </div>
        </div>
      </div>
    </body>

      219 |       );
      220 |       
    > 221 |       const startButton = screen.getByText('╨Ч╨░╨┐╤Г╤Б╤В╨╕╤В╤М ╨║╨░╨╝╨╡╤А╤Г');
          |                                  ^
      222 |       await userEvent.click(startButton);
      223 |       
      224 |       // Unmount before getUserMedia resolves

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (src/components/__tests__/Scanner.strict-mode.test.tsx:221:34)

  тЧП Scanner Component - React Strict Mode Tests тА║ mountedRef Pattern Validation тА║ should prevent state updates after unmount

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div />
      </body>
    </html>

      251 |       
      252 |       await waitFor(() => {
    > 253 |         expect(mockGetUserMedia).toHaveBeenCalled();
          |                                  ^
      254 |       });
      255 |       
      256 |       // Should not have React warnings about state updates after unmount

      at toHaveBeenCalled (src/components/__tests__/Scanner.strict-mode.test.tsx:253:34)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  тЧП Scanner Component - React Strict Mode Tests тА║ Memory Leak Prevention тА║ should clean up all MediaStream tracks on unmount

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div>
          <div
            class="relative w-full h-full bg-black"
          >
            <video
              autoplay=""
              class="w-full h-full object-cover"
              playsinline=""
            />
            <div
              class="absolute top-4 right-4 flex flex-col gap-2"
            >
              <button
                class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
                title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
            >
              <div
                class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
              >
                <button
                  class="text-white p-1 disabled:opacity-50"
                  disabled=""
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20 12H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
                <span
                  class="text-white text-sm min-w-[3rem] text-center"
                >
                  1.0
                  x
                </span>
                <button
                  class="text-white p-1 disabled:opacity-50"
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M12 4v16m8-8H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </body>
    </html>

      310 |       // In Strict Mode, components mount twice, so we might have multiple tracks
      311 |       await waitFor(() => {
    > 312 |         expect(mockStreamTracks.length).toBeGreaterThan(0);
          |                                         ^
      313 |       });
      314 |       
      315 |       const tracksBeforeUnmount = [...mockStreamTracks];

      at toBeGreaterThan (src/components/__tests__/Scanner.strict-mode.test.tsx:312:41)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  тЧП Scanner Component - React Strict Mode Tests тА║ Performance Under Strict Mode тА║ should not cause excessive re-renders

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div>
          <div
            class="relative w-full h-full bg-black"
          >
            <video
              autoplay=""
              class="w-full h-full object-cover"
              playsinline=""
            />
            <div
              class="absolute top-4 right-4 flex flex-col gap-2"
            >
              <button
                class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
                title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
            >
              <div
                class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
              >
                <button
                  class="text-white p-1 disabled:opacity-50"
                  disabled=""
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20 12H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
                <span
                  class="text-white text-sm min-w-[3rem] text-center"
                >
                  1.0
                  x
                </span>
                <button
                  class="text-white p-1 disabled:opacity-50"
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M12 4v16m8-8H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </body>
    </html>

      342 |       
      343 |       await waitFor(() => {
    > 344 |         expect(mockGetUserMedia).toHaveBeenCalled();
          |                                  ^
      345 |       });
      346 |       
      347 |       // In Strict Mode, components render twice in development

      at toHaveBeenCalled (src/components/__tests__/Scanner.strict-mode.test.tsx:344:34)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

FAIL src/components/__tests__/Scanner.test.tsx (11.346 s)
  тЧП Console

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

       97 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨▓╨╛╨╖╨╝╨╛╨╢╨╜╨╛╤Б╤В╨╕
       98 |       const caps = await scanner.getCapabilities()
    >  99 |       setCapabilities(caps)
          |       ^
      100 |
      101 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨┤╨╛╤Б╤В╤Г╨┐╨╜╤Л╨╡ ╨║╨░╨╝╨╡╤А╤Л
      102 |       const cameras = await scanner.getAvailableCameras()

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCapabilities (src/hooks/useScanner.ts:99:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      101 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨┤╨╛╤Б╤В╤Г╨┐╨╜╤Л╨╡ ╨║╨░╨╝╨╡╤А╤Л
      102 |       const cameras = await scanner.getAvailableCameras()
    > 103 |       setAvailableCameras(cameras)
          |       ^
      104 |
      105 |       // ╨Я╤А╨╛╨▓╨╡╤А╤П╨╡╨╝ ╤А╨░╨╖╤А╨╡╤И╨╡╨╜╨╕╤П
      106 |       const permission = await scanner.getCameraPermissionStatus()

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAvailableCameras (src/hooks/useScanner.ts:103:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      105 |       // ╨Я╤А╨╛╨▓╨╡╤А╤П╨╡╨╝ ╤А╨░╨╖╤А╨╡╤И╨╡╨╜╨╕╤П
      106 |       const permission = await scanner.getCameraPermissionStatus()
    > 107 |       setPermissionStatus(permission)
          |       ^
      108 |
      109 |       setIsInitialized(true)
      110 |       console.log('тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜', { caps, cameras, permission })

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setPermissionStatus (src/hooks/useScanner.ts:107:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      107 |       setPermissionStatus(permission)
      108 |
    > 109 |       setIsInitialized(true)
          |       ^
      110 |       console.log('тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜', { caps, cameras, permission })
      111 |
      112 |       // ╨Р╨▓╤В╨╛╨╖╨░╨┐╤Г╤Б╨║ ╨╡╤Б╨╗╨╕ ╨▓╨║╨╗╤О╤З╨╡╨╜

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setIsInitialized (src/hooks/useScanner.ts:109:7)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [ { deviceId: 'camera1', kind: 'videoinput', label: 'Camera 1' } ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

  тЧП Scanner Component - Baseline Tests тА║ Component Rendering тА║ should render scanner interface when active

    Unable to find role="video"

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="relative w-full h-full bg-black"
        >
          <video
            autoplay=""
            class="w-full h-full object-cover"
            playsinline=""
          />
          <div
            class="absolute top-4 right-4 flex flex-col gap-2"
          >
            <button
              class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
              title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
            >
              <svg
                class="w-5 h-5"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                />
              </svg>
            </button>
          </div>
          <div
            class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
          >
            <div
              class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
            >
              <button
                class="text-white p-1 disabled:opacity-50"
                disabled=""
              >
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M20 12H4"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
              <span
                class="text-white text-sm min-w-[3rem] text-center"
              >
                1.0
                x
              </span>
              <button
                class="text-white p-1 disabled:opacity-50"
              >
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M12 4v16m8-8H4"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
          </div>
        </div>
      </div>
    </body>

      109 |       
      110 |       // Wait for the component to initialize
    > 111 |       await waitFor(() => {
          |                    ^
      112 |         expect(screen.getByRole('video')).toBeInTheDocument();
      113 |       });
      114 |     });

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/components/__tests__/Scanner.test.tsx:111:20)

  тЧП Scanner Component - Baseline Tests тА║ Component Rendering тА║ should not render when inactive

    expect(received).toBeNull()

    Received: <div class="relative w-full h-full bg-black"><video autoplay="" class="w-full h-full object-cover" playsinline="" /><div class="absolute top-4 right-4 flex flex-col gap-2"><button class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70" title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"><svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" /></svg></button></div><div class="absolute bottom-4 left-1/2 transform -translate-x-1/2"><div class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"><button class="text-white p-1 disabled:opacity-50" disabled=""><svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path d="M20 12H4" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" /></svg></button><span class="text-white text-sm min-w-[3rem] text-center">1.0x</span><button class="text-white p-1 disabled:opacity-50"><svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path d="M12 4v16m8-8H4" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" /></svg></button></div></div><div class="absolute inset-0 bg-black/50 flex items-center justify-center"><div class="text-white text-center"><div class="animate-spin rounded-full h-8 w-8 border-b-2 border-white mx-auto mb-2" /><p>╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...</p></div></div></div>

      117 |       const { container } = render(<Scanner onScan={mockOnScan} onError={mockOnError} isActive={false} />);
      118 |       
    > 119 |       expect(container.firstChild).toBeNull();
          |                                    ^
      120 |     });
      121 |
      122 |     it('should show loading state during camera initialization', async () => {

      at Object.toBeNull (src/components/__tests__/Scanner.test.tsx:119:36)

  тЧП Scanner Component - Baseline Tests тА║ Component Rendering тА║ should show loading state during camera initialization

    Unable to find an element with the text: Starting camera.... This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="relative w-full h-full bg-black"
        >
          <video
            autoplay=""
            class="w-full h-full object-cover"
            playsinline=""
          />
          <div
            class="absolute top-4 right-4 flex flex-col gap-2"
          >
            <button
              class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
              title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
            >
              <svg
                class="w-5 h-5"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                />
              </svg>
            </button>
          </div>
          <div
            class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
          >
            <div
              class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
            >
              <button
                class="text-white p-1 disabled:opacity-50"
                disabled=""
              >
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M20 12H4"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
              <span
                class="text-white text-sm min-w-[3rem] text-center"
              >
                1.0
                x
              </span>
              <button
                class="text-white p-1 disabled:opacity-50"
              >
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M12 4v16m8-8H4"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
          </div>
        </div>
      </div>
    </body>

      126 |       render(<Scanner onScan={mockOnScan} onError={mockOnError} isActive={true} />);
      127 |       
    > 128 |       await waitFor(() => {
          |                    ^
      129 |         expect(screen.getByText('Starting camera...')).toBeInTheDocument();
      130 |       });
      131 |     });

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (src/components/__tests__/Scanner.test.tsx:128:20)

  тЧП Scanner Component - Baseline Tests тА║ MediaStream Lifecycle тА║ should initialize camera successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"video": {"facingMode": "environment"}}

    Number of calls: 0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div>
          <div
            class="relative w-full h-full bg-black"
          >
            <video
              autoplay=""
              class="w-full h-full object-cover"
              playsinline=""
            />
            <div
              class="absolute top-4 right-4 flex flex-col gap-2"
            >
              <button
                class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
                title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
            >
              <div
                class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
              >
                <button
                  class="text-white p-1 disabled:opacity-50"
                  disabled=""
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20 12H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
                <span
                  class="text-white text-sm min-w-[3rem] text-center"
                >
                  1.0
                  x
                </span>
                <button
                  class="text-white p-1 disabled:opacity-50"
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M12 4v16m8-8H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </body>
    </html>

      137 |       
      138 |       await waitFor(() => {
    > 139 |         expect(mockGetUserMedia).toHaveBeenCalledWith({
          |                                  ^
      140 |           video: { facingMode: 'environment' }
      141 |         });
      142 |       });

      at toHaveBeenCalledWith (src/components/__tests__/Scanner.test.tsx:139:34)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  тЧП Scanner Component - Baseline Tests тА║ MediaStream Lifecycle тА║ should handle camera permission denied

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<Error>

    Number of calls: 0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div>
          <div
            class="relative w-full h-full bg-black"
          >
            <video
              autoplay=""
              class="w-full h-full object-cover"
              playsinline=""
            />
            <div
              class="absolute top-4 right-4 flex flex-col gap-2"
            >
              <button
                class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
                title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
            >
              <div
                class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
              >
                <button
                  class="text-white p-1 disabled:opacity-50"
                  disabled=""
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20 12H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
                <span
                  class="text-white text-sm min-w-[3rem] text-center"
                >
                  1.0
                  x
                </span>
                <button
                  class="text-white p-1 disabled:opacity-50"
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M12 4v16m8-8H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </body>
    </html>

      151 |       
      152 |       await waitFor(() => {
    > 153 |         expect(mockOnError).toHaveBeenCalledWith(
          |                             ^
      154 |           expect.any(Error)
      155 |         );
      156 |       });

      at toHaveBeenCalledWith (src/components/__tests__/Scanner.test.tsx:153:29)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  тЧП Scanner Component - Baseline Tests тА║ MediaStream Lifecycle тА║ should cleanup MediaStream on component unmount

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div>
          <div
            class="relative w-full h-full bg-black"
          >
            <video
              autoplay=""
              class="w-full h-full object-cover"
              playsinline=""
            />
            <div
              class="absolute top-4 right-4 flex flex-col gap-2"
            >
              <button
                class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
                title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
            >
              <div
                class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
              >
                <button
                  class="text-white p-1 disabled:opacity-50"
                  disabled=""
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20 12H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
                <span
                  class="text-white text-sm min-w-[3rem] text-center"
                >
                  1.0
                  x
                </span>
                <button
                  class="text-white p-1 disabled:opacity-50"
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M12 4v16m8-8H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </body>
    </html>

      169 |       
      170 |       await waitFor(() => {
    > 171 |         expect(mockGetUserMedia).toHaveBeenCalled();
          |                                  ^
      172 |       });
      173 |       
      174 |       unmount();

      at toHaveBeenCalled (src/components/__tests__/Scanner.test.tsx:171:34)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  тЧП Scanner Component - Baseline Tests тА║ React Strict Mode Behavior тА║ should handle double mounting without errors

    Cannot update an unmounted root.

      184 |       // Simulate Strict Mode double mounting
      185 |       unmount();
    > 186 |       rerender(<Scanner onScan={mockOnScan} onError={mockOnError} isActive={true} />);
          |       ^
      187 |       
      188 |       // Should not throw errors or call getUserMedia multiple times unnecessarily
      189 |       await waitFor(() => {

      at ReactDOMRoot.process.env.NODE_ENV.ReactDOMHydrationRoot.render.ReactDOMRoot.render [as render] (node_modules/react-dom/cjs/react-dom-client.development.js:24739:34)
      at Object.render (node_modules/@testing-library/react/dist/pure.js:161:12)
      at node_modules/@testing-library/react/dist/pure.js:194:12
      at node_modules/@testing-library/react/dist/act-compat.js:48:24
      at process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at rerender (node_modules/@testing-library/react/dist/pure.js:211:7)
      at Object.rerender (src/components/__tests__/Scanner.test.tsx:186:7)

  тЧП Scanner Component - Baseline Tests тА║ React Strict Mode Behavior тА║ should not create multiple MediaStreams on re-renders

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div>
          <div
            class="relative w-full h-full bg-black"
          >
            <video
              autoplay=""
              class="w-full h-full object-cover"
              playsinline=""
            />
            <div
              class="absolute top-4 right-4 flex flex-col gap-2"
            >
              <button
                class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
                title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
            >
              <div
                class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
              >
                <button
                  class="text-white p-1 disabled:opacity-50"
                  disabled=""
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20 12H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
                <span
                  class="text-white text-sm min-w-[3rem] text-center"
                >
                  1.0
                  x
                </span>
                <button
                  class="text-white p-1 disabled:opacity-50"
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M12 4v16m8-8H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </body>
    </html>

      196 |       
      197 |       await waitFor(() => {
    > 198 |         expect(mockGetUserMedia).toHaveBeenCalledTimes(1);
          |                                  ^
      199 |       });
      200 |       
      201 |       // Force re-render

      at toHaveBeenCalledTimes (src/components/__tests__/Scanner.test.tsx:198:34)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  тЧП Scanner Component - Baseline Tests тА║ useEffect Race Conditions тА║ should handle rapid isActive changes

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div>
          <div
            class="relative w-full h-full bg-black"
          >
            <video
              autoplay=""
              class="w-full h-full object-cover"
              playsinline=""
            />
            <div
              class="absolute top-4 right-4 flex flex-col gap-2"
            >
              <button
                class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
                title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
            >
              <div
                class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
              >
                <button
                  class="text-white p-1 disabled:opacity-50"
                  disabled=""
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20 12H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
                <span
                  class="text-white text-sm min-w-[3rem] text-center"
                >
                  1.0
                  x
                </span>
                <button
                  class="text-white p-1 disabled:opacity-50"
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M12 4v16m8-8H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </body>
    </html>

      218 |       // Should not cause multiple concurrent getUserMedia calls
      219 |       await waitFor(() => {
    > 220 |         expect(mockGetUserMedia).toHaveBeenCalledTimes(1);
          |                                  ^
      221 |       });
      222 |     });
      223 |   });

      at toHaveBeenCalledTimes (src/components/__tests__/Scanner.test.tsx:220:34)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  тЧП Scanner Component - Baseline Tests тА║ Error Handling тА║ should handle camera not found error

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<Error>

    Number of calls: 0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div>
          <div
            class="relative w-full h-full bg-black"
          >
            <video
              autoplay=""
              class="w-full h-full object-cover"
              playsinline=""
            />
            <div
              class="absolute top-4 right-4 flex flex-col gap-2"
            >
              <button
                class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
                title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
            >
              <div
                class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
              >
                <button
                  class="text-white p-1 disabled:opacity-50"
                  disabled=""
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20 12H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
                <span
                  class="text-white text-sm min-w-[3rem] text-center"
                >
                  1.0
                  x
                </span>
                <button
                  class="text-white p-1 disabled:opacity-50"
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M12 4v16m8-8H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </body>
    </html>

      232 |       
      233 |       await waitFor(() => {
    > 234 |         expect(mockOnError).toHaveBeenCalledWith(
          |                             ^
      235 |           expect.any(Error)
      236 |         );
      237 |       });

      at toHaveBeenCalledWith (src/components/__tests__/Scanner.test.tsx:234:29)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  тЧП Scanner Component - Baseline Tests тА║ Error Handling тА║ should handle generic camera errors

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<Error>

    Number of calls: 0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div>
          <div
            class="relative w-full h-full bg-black"
          >
            <video
              autoplay=""
              class="w-full h-full object-cover"
              playsinline=""
            />
            <div
              class="absolute top-4 right-4 flex flex-col gap-2"
            >
              <button
                class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
                title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
            >
              <div
                class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
              >
                <button
                  class="text-white p-1 disabled:opacity-50"
                  disabled=""
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20 12H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
                <span
                  class="text-white text-sm min-w-[3rem] text-center"
                >
                  1.0
                  x
                </span>
                <button
                  class="text-white p-1 disabled:opacity-50"
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M12 4v16m8-8H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </body>
    </html>

      244 |       
      245 |       await waitFor(() => {
    > 246 |         expect(mockOnError).toHaveBeenCalledWith(
          |                             ^
      247 |           expect.any(Error)
      248 |         );
      249 |       });

      at toHaveBeenCalledWith (src/components/__tests__/Scanner.test.tsx:246:29)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

FAIL src/components/__tests__/Scanner.integration.test.tsx (11.511 s)
  тЧП Console

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

       97 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨▓╨╛╨╖╨╝╨╛╨╢╨╜╨╛╤Б╤В╨╕
       98 |       const caps = await scanner.getCapabilities()
    >  99 |       setCapabilities(caps)
          |       ^
      100 |
      101 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨┤╨╛╤Б╤В╤Г╨┐╨╜╤Л╨╡ ╨║╨░╨╝╨╡╤А╤Л
      102 |       const cameras = await scanner.getAvailableCameras()

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCapabilities (src/hooks/useScanner.ts:99:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      101 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨┤╨╛╤Б╤В╤Г╨┐╨╜╤Л╨╡ ╨║╨░╨╝╨╡╤А╤Л
      102 |       const cameras = await scanner.getAvailableCameras()
    > 103 |       setAvailableCameras(cameras)
          |       ^
      104 |
      105 |       // ╨Я╤А╨╛╨▓╨╡╤А╤П╨╡╨╝ ╤А╨░╨╖╤А╨╡╤И╨╡╨╜╨╕╤П
      106 |       const permission = await scanner.getCameraPermissionStatus()

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAvailableCameras (src/hooks/useScanner.ts:103:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      105 |       // ╨Я╤А╨╛╨▓╨╡╤А╤П╨╡╨╝ ╤А╨░╨╖╤А╨╡╤И╨╡╨╜╨╕╤П
      106 |       const permission = await scanner.getCameraPermissionStatus()
    > 107 |       setPermissionStatus(permission)
          |       ^
      108 |
      109 |       setIsInitialized(true)
      110 |       console.log('тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜', { caps, cameras, permission })

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setPermissionStatus (src/hooks/useScanner.ts:107:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      107 |       setPermissionStatus(permission)
      108 |
    > 109 |       setIsInitialized(true)
          |       ^
      110 |       console.log('тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜', { caps, cameras, permission })
      111 |
      112 |       // ╨Р╨▓╤В╨╛╨╖╨░╨┐╤Г╤Б╨║ ╨╡╤Б╨╗╨╕ ╨▓╨║╨╗╤О╤З╨╡╨╜

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setIsInitialized (src/hooks/useScanner.ts:109:7)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [
          {
            deviceId: 'camera1',
            kind: 'videoinput',
            label: 'Back Camera',
            groupId: 'group1'
          },
          {
            deviceId: 'camera2',
            kind: 'videoinput',
            label: 'Front Camera',
            groupId: 'group2'
          }
        ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [
          {
            deviceId: 'camera1',
            kind: 'videoinput',
            label: 'Back Camera',
            groupId: 'group1'
          },
          {
            deviceId: 'camera2',
            kind: 'videoinput',
            label: 'Front Camera',
            groupId: 'group2'
          }
        ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [
          {
            deviceId: 'camera1',
            kind: 'videoinput',
            label: 'Back Camera',
            groupId: 'group1'
          },
          {
            deviceId: 'camera2',
            kind: 'videoinput',
            label: 'Front Camera',
            groupId: 'group2'
          }
        ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [
          {
            deviceId: 'camera1',
            kind: 'videoinput',
            label: 'Back Camera',
            groupId: 'group1'
          },
          {
            deviceId: 'camera2',
            kind: 'videoinput',
            label: 'Front Camera',
            groupId: 'group2'
          }
        ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [
          {
            deviceId: 'camera1',
            kind: 'videoinput',
            label: 'Back Camera',
            groupId: 'group1'
          },
          {
            deviceId: 'camera2',
            kind: 'videoinput',
            label: 'Front Camera',
            groupId: 'group2'
          }
        ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [
          {
            deviceId: 'camera1',
            kind: 'videoinput',
            label: 'Back Camera',
            groupId: 'group1'
          },
          {
            deviceId: 'camera2',
            kind: 'videoinput',
            label: 'Front Camera',
            groupId: 'group2'
          }
        ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [
          {
            deviceId: 'camera1',
            kind: 'videoinput',
            label: 'Back Camera',
            groupId: 'group1'
          },
          {
            deviceId: 'camera2',
            kind: 'videoinput',
            label: 'Front Camera',
            groupId: 'group2'
          }
        ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [
          {
            deviceId: 'camera1',
            kind: 'videoinput',
            label: 'Back Camera',
            groupId: 'group1'
          },
          {
            deviceId: 'camera2',
            kind: 'videoinput',
            label: 'Front Camera',
            groupId: 'group2'
          }
        ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [
          {
            deviceId: 'camera1',
            kind: 'videoinput',
            label: 'Back Camera',
            groupId: 'group1'
          },
          {
            deviceId: 'camera2',
            kind: 'videoinput',
            label: 'Front Camera',
            groupId: 'group2'
          }
        ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

       97 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨▓╨╛╨╖╨╝╨╛╨╢╨╜╨╛╤Б╤В╨╕
       98 |       const caps = await scanner.getCapabilities()
    >  99 |       setCapabilities(caps)
          |       ^
      100 |
      101 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨┤╨╛╤Б╤В╤Г╨┐╨╜╤Л╨╡ ╨║╨░╨╝╨╡╤А╤Л
      102 |       const cameras = await scanner.getAvailableCameras()

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCapabilities (src/hooks/useScanner.ts:99:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      101 |       // ╨Я╨╛╨╗╤Г╤З╨░╨╡╨╝ ╨┤╨╛╤Б╤В╤Г╨┐╨╜╤Л╨╡ ╨║╨░╨╝╨╡╤А╤Л
      102 |       const cameras = await scanner.getAvailableCameras()
    > 103 |       setAvailableCameras(cameras)
          |       ^
      104 |
      105 |       // ╨Я╤А╨╛╨▓╨╡╤А╤П╨╡╨╝ ╤А╨░╨╖╤А╨╡╤И╨╡╨╜╨╕╤П
      106 |       const permission = await scanner.getCameraPermissionStatus()

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAvailableCameras (src/hooks/useScanner.ts:103:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      105 |       // ╨Я╤А╨╛╨▓╨╡╤А╤П╨╡╨╝ ╤А╨░╨╖╤А╨╡╤И╨╡╨╜╨╕╤П
      106 |       const permission = await scanner.getCameraPermissionStatus()
    > 107 |       setPermissionStatus(permission)
          |       ^
      108 |
      109 |       setIsInitialized(true)
      110 |       console.log('тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜', { caps, cameras, permission })

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setPermissionStatus (src/hooks/useScanner.ts:107:7)

    console.error
      An update to Scanner inside a test was not wrapped in act(...).
      
      When testing, code that causes React state updates should be wrapped into act(...):
      
      act(() => {
        /* fire events that update state */
      });
      /* assert on the output */
      
      This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      107 |       setPermissionStatus(permission)
      108 |
    > 109 |       setIsInitialized(true)
          |       ^
      110 |       console.log('тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜', { caps, cameras, permission })
      111 |
      112 |       // ╨Р╨▓╤В╨╛╨╖╨░╨┐╤Г╤Б╨║ ╨╡╤Б╨╗╨╕ ╨▓╨║╨╗╤О╤З╨╡╨╜

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setIsInitialized (src/hooks/useScanner.ts:109:7)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [
          {
            deviceId: 'camera1',
            kind: 'videoinput',
            label: 'Back Camera',
            groupId: 'group1'
          },
          {
            deviceId: 'camera2',
            kind: 'videoinput',
            label: 'Front Camera',
            groupId: 'group2'
          }
        ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      ЁЯЪА useScanner: ╨Ч╨░╨┐╤Г╤Б╨║ ╨░╨▓╤В╨╛╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╨╕...

      at log (src/hooks/useScanner.ts:382:13)

    console.log
      ЁЯФД useScanner: ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...

      at log (src/hooks/useScanner.ts:92:15)

    console.log
      ЁЯПн ScannerFactory: ╨б╨╛╨╖╨┤╨░╨╜╨╕╨╡ ╤Б╨║╨░╨╜╨╡╤А╨░... {
        preferredType: 'auto',
        fallbackToZXing: true,
        config: {
          enableDiagnostics: true,
          formats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ]
        }
      }

      at Function.log [as createScanner] (src/services/scanner/index.ts:37:13)

    console.log
      ЁЯФН ScannerFactory: ╨Р╨▓╤В╨╛╨╝╨░╤В╨╕╤З╨╡╤Б╨║╨╕╨╣ ╨▓╤Л╨▒╨╛╤А ╤Б╨║╨░╨╜╨╡╤А╨░...

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:87:13)

    console.log
      ЁЯУК ScannerFactory: ╨Ф╨╛╤Б╤В╤Г╨┐╨╜╨╛╤Б╤В╤М API: {
        barcodeDetector: false,
        zxing: true,
        camera: true,
        secureContext: true
      }

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:91:13)

    console.log
      ЁЯФД ScannerFactory: Fallback ╨║ ZXing

      at Function.log [as createBestAvailableScanner] (src/services/scanner/index.ts:110:15)

    console.log
      [ZXingScannerService] ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ZXing ╤Б╨║╨░╨╜╨╡╤А╨░...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)

    console.log
      тЬЕ useScanner: ╨б╨║╨░╨╜╨╡╤А ╨╕╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨╕╤А╨╛╨▓╨░╨╜ {
        caps: {
          supportedFormats: [ 'ean_13', 'ean_8', 'upc_a', 'code_128' ],
          supportsFlashlight: true,
          supportsZoom: true,
          supportsFocus: true,
          maxZoom: 3
        },
        cameras: [
          {
            deviceId: 'camera1',
            kind: 'videoinput',
            label: 'Back Camera',
            groupId: 'group1'
          },
          {
            deviceId: 'camera2',
            kind: 'videoinput',
            label: 'Front Camera',
            groupId: 'group2'
          }
        ],
        permission: { granted: false, denied: false, prompt: true }
      }

      at log (src/hooks/useScanner.ts:110:15)

    console.log
      ЁЯз╣ useScanner: ╨Ю╤З╨╕╤Б╤В╨║╨░ ╨┐╤А╨╕ ╤А╨░╨╖╨╝╨╛╨╜╤В╨╕╤А╨╛╨▓╨░╨╜╨╕╨╕

      at log (src/hooks/useScanner.ts:388:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨║╨░ ╤Б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╤П...

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

    console.log
      [ZXingScannerService] ╨б╨║╨░╨╜╨╕╤А╨╛╨▓╨░╨╜╨╕╨╡ ╨╛╤Б╤В╨░╨╜╨╛╨▓╨╗╨╡╨╜╨╛

      at ZXingScannerService.log (src/services/scanner/ScannerService.ts:190:15)
          at Array.forEach (<anonymous>)

  тЧП Scanner Component - Integration Tests тА║ Complete Scanning Workflow тА║ should complete full camera-to-scan workflow

    TestingLibraryElementError: Unable to find an element with the text: ╨Ч╨░╨┐╤Г╤Б╤В╨╕╤В╤М ╨║╨░╨╝╨╡╤А╤Г. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="relative w-full h-full bg-black"
        >
          <video
            autoplay=""
            class="w-full h-full object-cover"
            playsinline=""
          />
          <div
            class="absolute top-4 right-4 flex flex-col gap-2"
          >
            <button
              class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
              title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
            >
              <svg
                class="w-5 h-5"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                />
              </svg>
            </button>
          </div>
          <div
            class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
          >
            <div
              class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
            >
              <button
                class="text-white p-1 disabled:opacity-50"
                disabled=""
              >
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M20 12H4"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
              <span
                class="text-white text-sm min-w-[3rem] text-center"
              >
                1.0
                x
              </span>
              <button
                class="text-white p-1 disabled:opacity-50"
              >
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M12 4v16m8-8H4"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
          </div>
          <div
            class="absolute inset-0 bg-black/50 flex items-center justify-center"
          >
            <div
              class="text-white text-center"
            >
              <div
                class="animate-spin rounded-full h-8 w-8 border-b-2 border-white mx-auto mb-2"
              />
              <p>
                ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...
              </p>
            </div>
          </div>
        </div>
      </div>
    </body>

      204 |       
      205 |       // Step 1: Start camera
    > 206 |       const startButton = screen.getByText('╨Ч╨░╨┐╤Г╤Б╤В╨╕╤В╤М ╨║╨░╨╝╨╡╤А╤Г');
          |                                  ^
      207 |       await userEvent.click(startButton);
      208 |       
      209 |       // Step 2: Wait for camera initialization

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (src/components/__tests__/Scanner.integration.test.tsx:206:34)

  тЧП Scanner Component - Integration Tests тА║ Complete Scanning Workflow тА║ should handle camera switching during scanning

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"video": {"facingMode": "environment"}}

    Number of calls: 0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div>
          <div
            class="relative w-full h-full bg-black"
          >
            <video
              autoplay=""
              class="w-full h-full object-cover"
              playsinline=""
            />
            <div
              class="absolute top-4 right-4 flex flex-col gap-2"
            >
              <button
                class="bg-black/50 text-white p-2 rounded-full hover:bg-black/70 transition-colors"
                title="╨Я╨╡╤А╨╡╨║╨╗╤О╤З╨╕╤В╤М ╨║╨░╨╝╨╡╤А╤Г"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
              <button
                class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
                title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
            >
              <div
                class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
              >
                <button
                  class="text-white p-1 disabled:opacity-50"
                  disabled=""
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20 12H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
                <span
                  class="text-white text-sm min-w-[3rem] text-center"
                >
                  1.0
                  x
                </span>
                <button
                  class="text-white p-1 disabled:opacity-50"
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M12 4v16m8-8H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </body>
    </html>

      232 |       
      233 |       await waitFor(() => {
    > 234 |         expect(mockGetUserMedia).toHaveBeenCalledWith({
          |                                  ^
      235 |           video: { facingMode: 'environment' }
      236 |         });
      237 |       });

      at toHaveBeenCalledWith (src/components/__tests__/Scanner.integration.test.tsx:234:34)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  тЧП Scanner Component - Integration Tests тА║ Complete Scanning Workflow тА║ should handle multiple consecutive scans

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div>
          <div
            class="relative w-full h-full bg-black"
          >
            <video
              autoplay=""
              class="w-full h-full object-cover"
              playsinline=""
            />
            <div
              class="absolute top-4 right-4 flex flex-col gap-2"
            >
              <button
                class="bg-black/50 text-white p-2 rounded-full hover:bg-black/70 transition-colors"
                title="╨Я╨╡╤А╨╡╨║╨╗╤О╤З╨╕╤В╤М ╨║╨░╨╝╨╡╤А╤Г"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
              <button
                class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
                title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
            >
              <div
                class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
              >
                <button
                  class="text-white p-1 disabled:opacity-50"
                  disabled=""
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20 12H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
                <span
                  class="text-white text-sm min-w-[3rem] text-center"
                >
                  1.0
                  x
                </span>
                <button
                  class="text-white p-1 disabled:opacity-50"
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M12 4v16m8-8H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </body>
    </html>

      257 |       
      258 |       await waitFor(() => {
    > 259 |         expect(mockGetUserMedia).toHaveBeenCalled();
          |                                  ^
      260 |       });
      261 |       
      262 |       // First scan

      at toHaveBeenCalled (src/components/__tests__/Scanner.integration.test.tsx:259:34)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  тЧП Scanner Component - Integration Tests тА║ MediaStream Lifecycle Integration тА║ should properly manage stream lifecycle during errors

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div>
          <div
            class="relative w-full h-full bg-black"
          >
            <video
              autoplay=""
              class="w-full h-full object-cover"
              playsinline=""
            />
            <div
              class="absolute top-4 right-4 flex flex-col gap-2"
            >
              <button
                class="bg-black/50 text-white p-2 rounded-full hover:bg-black/70 transition-colors"
                title="╨Я╨╡╤А╨╡╨║╨╗╤О╤З╨╕╤В╤М ╨║╨░╨╝╨╡╤А╤Г"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
              <button
                class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
                title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
            >
              <div
                class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
              >
                <button
                  class="text-white p-1 disabled:opacity-50"
                  disabled=""
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20 12H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
                <span
                  class="text-white text-sm min-w-[3rem] text-center"
                >
                  1.0
                  x
                </span>
                <button
                  class="text-white p-1 disabled:opacity-50"
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M12 4v16m8-8H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </body>
    </html>

      285 |       
      286 |       await waitFor(() => {
    > 287 |         expect(mockGetUserMedia).toHaveBeenCalled();
          |                                  ^
      288 |       });
      289 |       
      290 |       // Simulate camera error during scanning

      at toHaveBeenCalled (src/components/__tests__/Scanner.integration.test.tsx:287:34)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  тЧП Scanner Component - Integration Tests тА║ MediaStream Lifecycle Integration тА║ should handle stream interruption and recovery

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div>
          <div
            class="relative w-full h-full bg-black"
          >
            <video
              autoplay=""
              class="w-full h-full object-cover"
              playsinline=""
            />
            <div
              class="absolute top-4 right-4 flex flex-col gap-2"
            >
              <button
                class="bg-black/50 text-white p-2 rounded-full hover:bg-black/70 transition-colors"
                title="╨Я╨╡╤А╨╡╨║╨╗╤О╤З╨╕╤В╤М ╨║╨░╨╝╨╡╤А╤Г"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
              <button
                class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
                title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
            >
              <div
                class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
              >
                <button
                  class="text-white p-1 disabled:opacity-50"
                  disabled=""
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20 12H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
                <span
                  class="text-white text-sm min-w-[3rem] text-center"
                >
                  1.0
                  x
                </span>
                <button
                  class="text-white p-1 disabled:opacity-50"
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M12 4v16m8-8H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </body>
    </html>

      322 |       
      323 |       await waitFor(() => {
    > 324 |         expect(mockGetUserMedia).toHaveBeenCalled();
          |                                  ^
      325 |       });
      326 |       
      327 |       // Simulate track ending (camera disconnected)

      at toHaveBeenCalled (src/components/__tests__/Scanner.integration.test.tsx:324:34)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  тЧП Scanner Component - Integration Tests тА║ Performance Integration тА║ should maintain performance during continuous scanning

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div>
          <div
            class="relative w-full h-full bg-black"
          >
            <video
              autoplay=""
              class="w-full h-full object-cover"
              playsinline=""
            />
            <div
              class="absolute top-4 right-4 flex flex-col gap-2"
            >
              <button
                class="bg-black/50 text-white p-2 rounded-full hover:bg-black/70 transition-colors"
                title="╨Я╨╡╤А╨╡╨║╨╗╤О╤З╨╕╤В╤М ╨║╨░╨╝╨╡╤А╤Г"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
              <button
                class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
                title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
            >
              <div
                class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
              >
                <button
                  class="text-white p-1 disabled:opacity-50"
                  disabled=""
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20 12H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
                <span
                  class="text-white text-sm min-w-[3rem] text-center"
                >
                  1.0
                  x
                </span>
                <button
                  class="text-white p-1 disabled:opacity-50"
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M12 4v16m8-8H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </body>
    </html>

      349 |       
      350 |       await waitFor(() => {
    > 351 |         expect(mockGetUserMedia).toHaveBeenCalled();
          |                                  ^
      352 |       });
      353 |       
      354 |       // Simulate multiple scan attempts

      at toHaveBeenCalled (src/components/__tests__/Scanner.integration.test.tsx:351:34)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  тЧП Scanner Component - Integration Tests тА║ Performance Integration тА║ should not cause memory leaks during extended use

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div>
          <div
            class="relative w-full h-full bg-black"
          >
            <video
              autoplay=""
              class="w-full h-full object-cover"
              playsinline=""
            />
            <div
              class="absolute top-4 right-4 flex flex-col gap-2"
            >
              <button
                class="bg-black/50 text-white p-2 rounded-full hover:bg-black/70 transition-colors"
                title="╨Я╨╡╤А╨╡╨║╨╗╤О╤З╨╕╤В╤М ╨║╨░╨╝╨╡╤А╤Г"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
              <button
                class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
                title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
            >
              <div
                class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
              >
                <button
                  class="text-white p-1 disabled:opacity-50"
                  disabled=""
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20 12H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
                <span
                  class="text-white text-sm min-w-[3rem] text-center"
                >
                  1.0
                  x
                </span>
                <button
                  class="text-white p-1 disabled:opacity-50"
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M12 4v16m8-8H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </body>
    </html>

      376 |       
      377 |       await waitFor(() => {
    > 378 |         expect(mockGetUserMedia).toHaveBeenCalled();
          |                                  ^
      379 |       });
      380 |       
      381 |       // Test multiple stop/start cycles

      at toHaveBeenCalled (src/components/__tests__/Scanner.integration.test.tsx:378:34)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  тЧП Scanner Component - Integration Tests тА║ Error Recovery Integration тА║ should recover from temporary camera access issues

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "╨Ю╤И╨╕╨▒╨║╨░ ╨┤╨╛╤Б╤В╤Г╨┐╨░ ╨║ ╨║╨░╨╝╨╡╤А╨╡"

    Number of calls: 0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div>
          <div
            class="relative w-full h-full bg-black"
          >
            <video
              autoplay=""
              class="w-full h-full object-cover"
              playsinline=""
            />
            <div
              class="absolute top-4 right-4 flex flex-col gap-2"
            >
              <button
                class="bg-black/50 text-white p-2 rounded-full hover:bg-black/70 transition-colors"
                title="╨Я╨╡╤А╨╡╨║╨╗╤О╤З╨╕╤В╤М ╨║╨░╨╝╨╡╤А╤Г"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
              <button
                class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
                title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
            >
              <div
                class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
              >
                <button
                  class="text-white p-1 disabled:opacity-50"
                  disabled=""
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20 12H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
                <span
                  class="text-white text-sm min-w-[3rem] text-center"
                >
                  1.0
                  x
                </span>
                <button
                  class="text-white p-1 disabled:opacity-50"
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M12 4v16m8-8H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </body>
    </html>

      417 |       // Should show error immediately due to permission issue
      418 |       await waitFor(() => {
    > 419 |         expect(mockOnError).toHaveBeenCalledWith(
          |                             ^
      420 |           expect.stringContaining('╨Ю╤И╨╕╨▒╨║╨░ ╨┤╨╛╤Б╤В╤Г╨┐╨░ ╨║ ╨║╨░╨╝╨╡╤А╨╡')
      421 |         );
      422 |       });

      at toHaveBeenCalledWith (src/components/__tests__/Scanner.integration.test.tsx:419:29)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  тЧП Scanner Component - Integration Tests тА║ Error Recovery Integration тА║ should handle ZXing library errors gracefully

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div>
          <div
            class="relative w-full h-full bg-black"
          >
            <video
              autoplay=""
              class="w-full h-full object-cover"
              playsinline=""
            />
            <div
              class="absolute top-4 right-4 flex flex-col gap-2"
            >
              <button
                class="bg-black/50 text-white p-2 rounded-full hover:bg-black/70 transition-colors"
                title="╨Я╨╡╤А╨╡╨║╨╗╤О╤З╨╕╤В╤М ╨║╨░╨╝╨╡╤А╤Г"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
              <button
                class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
                title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
            >
              <div
                class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
              >
                <button
                  class="text-white p-1 disabled:opacity-50"
                  disabled=""
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20 12H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
                <span
                  class="text-white text-sm min-w-[3rem] text-center"
                >
                  1.0
                  x
                </span>
                <button
                  class="text-white p-1 disabled:opacity-50"
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M12 4v16m8-8H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </body>
    </html>

      432 |       
      433 |       await waitFor(() => {
    > 434 |         expect(mockGetUserMedia).toHaveBeenCalled();
          |                                  ^
      435 |       });
      436 |       
      437 |       // Simulate ZXing error

      at toHaveBeenCalled (src/components/__tests__/Scanner.integration.test.tsx:434:34)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

  тЧП Scanner Component - Integration Tests тА║ Real-world Scenarios тА║ should handle rapid start/stop/start cycles

    TestingLibraryElementError: Unable to find an element with the text: ╨Ю╤Б╤В╨░╨╜╨╛╨▓╨╕╤В╤М ╨║╨░╨╝╨╡╤А╤Г. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

    Ignored nodes: comments, script, style
    <body>
      <div>
        <div
          class="relative w-full h-full bg-black"
        >
          <video
            autoplay=""
            class="w-full h-full object-cover"
            playsinline=""
          />
          <div
            class="absolute top-4 right-4 flex flex-col gap-2"
          >
            <button
              class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
              title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
            >
              <svg
                class="w-5 h-5"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                />
              </svg>
            </button>
          </div>
          <div
            class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
          >
            <div
              class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
            >
              <button
                class="text-white p-1 disabled:opacity-50"
                disabled=""
              >
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M20 12H4"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
              <span
                class="text-white text-sm min-w-[3rem] text-center"
              >
                1.0
                x
              </span>
              <button
                class="text-white p-1 disabled:opacity-50"
              >
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M12 4v16m8-8H4"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
          </div>
          <div
            class="absolute inset-0 bg-black/50 flex items-center justify-center"
          >
            <div
              class="text-white text-center"
            >
              <div
                class="animate-spin rounded-full h-8 w-8 border-b-2 border-white mx-auto mb-2"
              />
              <p>
                ╨Ш╨╜╨╕╤Ж╨╕╨░╨╗╨╕╨╖╨░╤Ж╨╕╤П ╤Б╨║╨░╨╜╨╡╤А╨░...
              </p>
            </div>
          </div>
        </div>
      </div>
    </body>

      463 |       for (let i = 0; i < 3; i++) {
      464 |         // Don't wait for full initialization
    > 465 |         const stopButton = screen.getByText('╨Ю╤Б╤В╨░╨╜╨╛╨▓╨╕╤В╤М ╨║╨░╨╝╨╡╤А╤Г');
          |                                   ^
      466 |         await userEvent.click(stopButton);
      467 |         
      468 |         const startButton = screen.getByText('╨Ч╨░╨┐╤Г╤Б╤В╨╕╤В╤М ╨║╨░╨╝╨╡╤А╤Г');

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByText (src/components/__tests__/Scanner.integration.test.tsx:465:35)

  тЧП Scanner Component - Integration Tests тА║ Real-world Scenarios тА║ should work correctly after page visibility changes

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

    Ignored nodes: comments, script, style
    <html>
      <head />
      <body>
        <div>
          <div
            class="relative w-full h-full bg-black"
          >
            <video
              autoplay=""
              class="w-full h-full object-cover"
              playsinline=""
            />
            <div
              class="absolute top-4 right-4 flex flex-col gap-2"
            >
              <button
                class="bg-black/50 text-white p-2 rounded-full hover:bg-black/70 transition-colors"
                title="╨Я╨╡╤А╨╡╨║╨╗╤О╤З╨╕╤В╤М ╨║╨░╨╝╨╡╤А╤Г"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
              <button
                class="p-2 rounded-full transition-colors bg-black/50 text-white hover:bg-black/70"
                title="╨а╨╡╨╢╨╕╨╝ ╤Д╨╛╨║╤Г╤Б╨░: ╨Р╨▓╤В╨╛"
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                  />
                </svg>
              </button>
            </div>
            <div
              class="absolute bottom-4 left-1/2 transform -translate-x-1/2"
            >
              <div
                class="flex items-center gap-2 bg-black/50 rounded-full px-4 py-2"
              >
                <button
                  class="text-white p-1 disabled:opacity-50"
                  disabled=""
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M20 12H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
                <span
                  class="text-white text-sm min-w-[3rem] text-center"
                >
                  1.0
                  x
                </span>
                <button
                  class="text-white p-1 disabled:opacity-50"
                >
                  <svg
                    class="w-4 h-4"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M12 4v16m8-8H4"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                    />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </body>
    </html>

      484 |       
      485 |       await waitFor(() => {
    > 486 |         expect(mockGetUserMedia).toHaveBeenCalled();
          |                                  ^
      487 |       });
      488 |       
      489 |       // Simulate page becoming hidden

      at toHaveBeenCalled (src/components/__tests__/Scanner.integration.test.tsx:486:34)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at checkRealTimersCallback (node_modules/@testing-library/dom/dist/wait-for.js:118:16)
      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:579:19)

Test Suites: 4 failed, 5 passed, 9 total
Tests:       33 failed, 73 passed, 106 total
Snapshots:   0 total
Time:        15.815 s
Ran all test suites.
